# .env.example
# Environment Configuration Template for Agentic Data Explorer
# Copy this file to .env and update with your actual values

# =============================================================================
# üèîÔ∏è SNOWFLAKE DATABASE CONFIGURATION
# =============================================================================
# Your Snowflake connection details
SNOWFLAKE_USER=your_username
SNOWFLAKE_PASSWORD=your_password
SNOWFLAKE_ACCOUNT=your_account_identifier  # e.g., abc12345.us-east-1
SNOWFLAKE_DATABASE=retail_analytics
SNOWFLAKE_SCHEMA=analytics
SNOWFLAKE_WAREHOUSE=COMPUTE_WH
SNOWFLAKE_ROLE=SYSADMIN

# =============================================================================
# ü§ñ LOCAL AI CONFIGURATION (OLLAMA)
# =============================================================================
# Ollama service configuration
LOCAL_AI_BACKEND=ollama
LOCAL_AI_MODEL=llama3.1:8b
LOCAL_AI_HOST=localhost
LOCAL_AI_PORT=11434

# AI model parameters
LOCAL_AI_TEMPERATURE=0.1        # Lower = more deterministic (0.0-1.0)
LOCAL_AI_MAX_TOKENS=1000        # Maximum response length
LOCAL_AI_TIMEOUT_SECONDS=90     # Request timeout

# Alternative AI backends (uncomment to use)
# LOCAL_AI_BACKEND=huggingface
# LOCAL_AI_MODEL=microsoft/DialoGPT-small

# =============================================================================
# ‚ö° API SERVER CONFIGURATION
# =============================================================================
# FastAPI server settings
API_PORT=8000
ENVIRONMENT=development         # development, staging, production
LOG_LEVEL=INFO                 # DEBUG, INFO, WARNING, ERROR

# API behavior
DEFAULT_MAX_ROWS=100
MAX_QUERY_TIMEOUT=120
ENABLE_QUERY_CACHING=false

# =============================================================================
# üîí SECURITY CONFIGURATION
# =============================================================================
# CORS settings (comma-separated origins)
ALLOWED_ORIGINS=*              # Use specific domains in production

# API rate limiting
ENABLE_RATE_LIMITING=false
RATE_LIMIT_PER_MINUTE=60

# =============================================================================
# üìä MONITORING & OBSERVABILITY
# =============================================================================
# Enable metrics collection
ENABLE_METRICS=true
METRICS_PORT=9090

# Logging configuration
LOG_FORMAT=json               # json, text
LOG_FILE_PATH=./logs/app.log
LOG_ROTATION=daily

# Health check settings
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# =============================================================================
# üé® STREAMLIT FRONTEND CONFIGURATION
# =============================================================================
# Streamlit app settings
STREAMLIT_PORT=8501
STREAMLIT_HOST=0.0.0.0
API_BASE_URL=http://localhost:8000/api/v1

# UI customization
STREAMLIT_THEME=light          # light, dark
ENABLE_AUTO_REFRESH=false
AUTO_REFRESH_INTERVAL=30

# =============================================================================
# üê≥ DOCKER CONFIGURATION
# =============================================================================
# Docker-specific settings (when running in containers)
DOCKER_ENV=false
CONTAINER_TIMEZONE=UTC

# =============================================================================
# üîß DEVELOPMENT SETTINGS
# =============================================================================
# Development-only settings
DEBUG_MODE=false
ENABLE_DEV_ENDPOINTS=false
MOCK_DATABASE=false

# Testing configuration
TEST_DATABASE_SCHEMA=test_analytics
RUN_INTEGRATION_TESTS=true

# =============================================================================
# üìà PERFORMANCE TUNING
# =============================================================================
# Database connection pooling
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30

# API worker configuration (production)
API_WORKERS=4
WORKER_TIMEOUT=120

# Query optimization
ENABLE_QUERY_CACHE=false
CACHE_TTL_SECONDS=300
MAX_CACHE_SIZE_MB=100

# =============================================================================
# üö® ALERTING & NOTIFICATIONS
# =============================================================================
# Error notification settings
ENABLE_ERROR_NOTIFICATIONS=false
SLACK_WEBHOOK_URL=""
EMAIL_SMTP_SERVER=""
EMAIL_FROM=""
EMAIL_TO=""

# Alert thresholds
ERROR_RATE_THRESHOLD=5         # Percentage
RESPONSE_TIME_THRESHOLD=5000   # Milliseconds
DISK_USAGE_THRESHOLD=85        # Percentage

# =============================================================================
# üìÅ FILE STORAGE CONFIGURATION
# =============================================================================
# Local file storage
UPLOAD_DIR=./uploads
MAX_UPLOAD_SIZE_MB=100
ALLOWED_FILE_TYPES=csv,xlsx,json

# Temporary file cleanup
TEMP_FILE_TTL_HOURS=24
CLEANUP_INTERVAL_HOURS=6

# =============================================================================
# üåê EXTERNAL INTEGRATIONS
# =============================================================================
# Optional external service integrations
ENABLE_EXTERNAL_APIS=false

# Data catalog integration
CATALOG_API_URL=""
CATALOG_API_KEY=""

# Business intelligence tools
BI_TOOL_WEBHOOK=""
BI_TOOL_API_KEY=""

# =============================================================================
# üéØ FEATURE FLAGS
# =============================================================================
# Feature toggles for gradual rollout
ENABLE_ADVANCED_ANALYTICS=true
ENABLE_REAL_TIME_QUERIES=true
ENABLE_QUERY_SUGGESTIONS=true
ENABLE_EXPORT_FEATURES=true
ENABLE_COLLABORATION=false
ENABLE_QUERY_HISTORY=true

# Experimental features
ENABLE_EXPERIMENTAL_AI=false
ENABLE_BETA_FEATURES=false

# =============================================================================
# üìù NOTES & DOCUMENTATION
# =============================================================================
# Quick setup checklist:
# 1. Replace all "your_*" values with actual credentials
# 2. Ensure Ollama is running: ollama serve
# 3. Pull required models: ollama pull codellama:7b
# 4. Test Snowflake connection
# 5. Run setup script: ./scripts/setup_project.sh
# 6. Start services: ./run_backend.sh & ./run_frontend.sh

# Troubleshooting:
# - API health check: curl http://localhost:8000/api/v1/health
# - Test AI agent: curl -X POST http://localhost:8000/api/v1/query/test
# - Check logs: tail -f logs/app.log
# - Verify Ollama: curl http://localhost:11434/api/tags

# Security notes:
# - Never commit this file with real credentials
# - Use strong passwords and rotate them regularly
# - Restrict database permissions to minimum required
# - Use HTTPS in production
# - Configure proper CORS origins for production